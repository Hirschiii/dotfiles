diskutil -l
diskutil -h
diskutil --help
diskutil --list
diskutil 
doas mount /dev/disk6s2 /mnt
sudo mount /dev/disk6s2 /mnt
mkdir mount 
sudo mount /dev/disk6s2 ./mount
sudo mount /dev/disk6s2 -t ext4 ./mount
sudo mount -t ext4 /dev/disk6s2 ./mount
ls mount
sudo mount -t ext4 /dev/disk6s2 /Users/niklas/mount
sudo mount -t ext4 /dev/disk6s2 
sudo mount -t ext4 /dev/disk6
sudo mkdir /Volumes/OhneTitel
sudo mount -t ext4 /dev/disk6s2 /Volumes/OhneTitel
sudo diskutil list
diskutil mountDisk /dev/disk6s2
diskutil list
diskutil mount /dev/disk6
diskutil mount /dev/disk6s2
diskutil mountDisk /dev/disk6
diskutil mountDisk readOnly /dev/disk6
sudo diskutil mountDisk readOnly /dev/disk6
touch ComponentDeserializer.java
touch GameObjectDeserializer.java
touch Rigidbody.java
mkdir editor
touch editor/JImGui.java
git commit -m "dynamic imgui for active GO"
git commit -m "added types for ImGUI active GO"
git pushsn -e
git pushs
gi tpuhs
curl https://am.i.mullvad.net/
fopen
brew install fopen
brew reinstall task
brew install tasksh
brew doctor
tmu
la
cp level.json level.json.ba
mv level.json.ba level.json.bak
task context none
ls -ka
nvim ../.taskrc
rm *.data
ls .task*
.ta
ls .taskrc
task init
taks
task -h
task --help
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
brew
brew upgrade
brew install task
brew install nnn
brew install eza
sudo chmod 777 .task*
rm script
task help
task debug
task color
task version
sudo task
ls -la .task*
cd projects/school/liferfix_game_projekt_2024_2_hj/
rm -rf notes
brew install tmux
brew install fzf
rm -rf ./lazy
brew install npm
brew install tslib
cd lazy/markdown-preview.nvim
npm install
brew install java
jar
java --version
mkdir releases
jar cfe MacOS_arm64_0.0.1_Beta_test.jar game -C bin .
jar cfe MacOS_arm64_0.0.1_Beta_test.jar game.App -C bin .
jar cfe MacOS_arm64_0.0.1_Beta_test.jar game.App -C bin . -C lib .
jar cfm MacOS_arm64_0.0.1_Beta_test.jar Manifest.txt -C bin .
jar cvf asd.jar game
jar cvf asd.jar game -C bin
jar cvf asd.jar game -C bin .
java -jar assets
jar cfm MacOS.jar Manifest.txt -C bin .
jar cfm MacOS.jar Manifest.txt -C bin . game.App
jar cfm MacOS.jar Manifest.txt -C bin . game
jar cfm MacOS.jar Manifest.txt gam e-C bin . 
jar cfm MacOS.jar Manifest.txt game -C bin . 
jar cvf MacOS.jar -C bin .
java -jar MacOS.jar game.Aoo
java -jar MacOS.jar game.App
jar cvf MacOS.jar game.App -C bin .
cat Manifest.txt
java -cp MacOS.jar:game.App
java -cp MacOS.jar:./lib/* game.App
jar cvfm MacOS.jar Manifest.txt game.App -C bin . -C lib .
java -cp MacOS.jar game.App
java -cp MacOS.jar 
java -jar MacOS.jar 
brew install tree
jar cvfm MacOS.jar Manifest.txt game.App -C bin .
jar cvfe MacOS.jar game.App -C bin . -C lib .
rm Ma
nvim MANIFEST.MF
jar uf MacOS.jar MANIFEST.MF
java -jar MacOS.jar
jar cf MeinProjekt.jar -C bin .\

rm MacOS.jar
jar uf MeinProjekt.jar MANIFEST.MF
mv MANIFEST.MF manifest.mf
nvim manifest.mf
jar -cmf manifest.mf MeinProjekt.jar game -C bin .
jar -cmf manifest.mf MeinProjekt.jar game
jar -cmf manifest.mf MeinProjekt.jar game.App
ls *.jar
jar -cmfe manifest.mf MeinProjekt.jar game -C bin .
jar cmfe manifest.mf MeinProjekt.jar game -C bin .
jar cfe MeinProjekt.jar game -C bin .
jar cfm MeinProjekt.jar Manifest.txt -C bin .
java -jar MeinProjekt.jar -cp lib
java -jar MeinProjekt.jar -cp lib/*
java -cp ./lib/* -jar MeinProjekt.jar
java -cp ./lib/*.jar -jar MeinProjekt.jar
jar cvfm MeinProjekt.jar Manifest.txt src
tree
nvim Mai
jar cvfm MeinProjekt.jar Manifest.txt -C bin .
jar cvfm MeinProjekt.jar Manifest.txt -cp lib/* -C bin .
mvim Manifest.txt
jar cvfm MeinProjekt.jar Manifest.txt
jar cvfm MeinProjekt.jar Manifest.txt -C bin . -C lib
jar cvfm MeinProjekt.jar Manifest.txt -C bin . -C lib .
jar cvfm MeinProjekt.jar Manifest.txt -C bin . -C lib . -C src .
java -jar MeinProjekt.jar
jar -tf MeinProjekt.jar
cd releases
unzip -l ../MeinProjekt.jar
unzip ../MeinProjekt.jar
jar cfm MacOS_arm64_0.0.1_Beta_test.jar Manifest.txt -C bin . -C ./lib .
java -jar MacOS_arm64_0.0.1_Beta_test.jar
nvim Manifest.txt
ls 
vim /tmp/lieferfix
nvim Ursachen.puml
vim 
brew install python-neovim
pip3 install neovim
brew install rg
brew install rg fd
touch Kern_01_Einfuehrung.md
nvim ke
nvim Kern_01_Einfuehrung.md
rm Kern_01_Einfuehrung.md
nvim Feder_Masse_Pendel.md
brew install pandoc
pandoc
brew install texlive
cp Makefile ../../Merkmale_Quing-Dynastie_Pres
pandoc -t beamer Pres.md -s -o Pres.pdf\

mkdir Merkmale_Quing-Dynastie
mv Merkmale_Quing-Dynastie Merkmale_Quing-Dynastie_Pres
cd Merkmale_Quing-Dynastie_Pres
pandoc Pres.md -s -o Pres.pdf
pandoc -t beamer Pres.md -s -o Pres.pdf
nvim Pres.
nvim Pres.md
pandoc -s --dpi=300 --slide-level 1 --toc --listings --shift-heading-level=1 --columns=50 --pdf-engine lualatex --from markdown --to beamer -o output.pdf Pres.md\

pandoc -s --dpi=300 --slide-level 0 --toc --listings --shift-heading-level=1 --columns=50 --pdf-engine lualatex --from markdown --to beamer -o output.pdf Pres.md\

pandoc -s --dpi=300 --slide-level 0 --toc --listings --shift-heading-level=0 --columns=50 --pdf-engine lualatex --from markdown --to beamer -o output.pdf Pres.md\

pandoc -s --dpi=300 --slide-level 1 --toc --listings --shift-heading-level=0 --columns=50 --pdf-engine lualatex --from markdown --to beamer -o output.pdf Pres.md\

nvim ind
nvim /tmp/test
rm MacOS_arm64_0.0.1_Beta_test.jar
rm manifest.mf
rm MeinProjekt.jar
[wd
mv Component.java ../components
mv ComponentDeserializer.java ../components
make run 
rm imgui.ini
touch Prefabs.java
touch src/main/java/game/components/MouseControls.java
cs
touch Settings.java
nvim Seq
nvim Settings.java
ls ./**/*.java | grep KeyL
nvim jade/ImGuiLayer.java
nvim editor/SceneHierarchyWindow.java
cat ./*/*.jav
cat ./*/*.java
cat ./*/*.java | grep setGameViewportPos
for ls
for file in ./*/*.java; do grep setGameViewportPos; done
for file in ./*/*.java; do echo $file && grep setGameViewportPos; done
for file in ./**/*.java; do echo $file && grep setGameViewportPos; done
for file in ./**/*; do echo $file && grep setGameViewportPos; done
for file in ./**/*; do echo $file; done
for file in ./**/*.java; do echo $file; done
for file in ./**/*.java; do echo $file && cat $file | grep setGameViewportPos; done
bash gradlew
sudo chmod +x gradlew
./gradlew
brew install gradlw
brew install gradle
gradle run
gradle 
gradle task
gradle jar
ls libs
cp ~/projects/school/liferfix_game_projekt_2024_2_hj/lib/* ./libs
cp ~/Downloads/jbox2d-library-2.2.1.1.jar ./libs/jbox2d-library.jar
nvim build
nvim build.gradle
mv libs lib
cd projects/school/liferfix_game_projekt_2024_2_hj
afn -e
nvim src/main/java/game/scene/*
git commit -m "drag dorp grame tiles"
cp ~/projects/school/liferfix_game_projekt_2024_2_hj/Makefile ./
nvim Ma
ls src/main/java
git commit 
mkdir scene
mv ./*/*scene* ./scene
mv engine/LevelEditorScene.java engine/LevelScene.java scene
ls scene
ls engine
mv engine/Scene.java ./scene
rm InitMenuScene.java
4An -e
git checkout -b test_new_render
git commit -m "cleaning / refactor"
rm -rf releases
rm Linux_amd64_bin_0.0.1
rm Manifest.txt
rm level.json.bak
git commit -m "clean"
git branch -d dev test-lwjgl test_ImGUI
git checkout init_gradle
git commit -m "ignore leve.json"
git checkout test_new_render
cd src/main/java
git checkout main 
git commit -m "test"
git push origin test_new_render
git checkout
git restore .
touch Line2D.java
touch DebugDraw.java
git commit -m "debug line draw"
cd lib
unzip ../assets/lwjgl-release-3.3.3-custom.zip ./
unzip ../assets/lwjgl-release-3.3.3-custom.zip
make run
make && make ru
brew install cmake
dmesg
mv .taskrc .taskrc.bak
mv .task .task.bak
task add school
rm -rf .task
mv .taskrc.bak .taskrc
task add pro
task 1 del
git clone https://github.com/letoram/arcan.git
cd arcan/external/git
./clone.sh
cd ../../
mkdir build 
brew install sqlite3 openal-soft sdl2 opengl luajit gbm kms freetype harfbuzz libxkbcommon\

brew install sqlite3 openal-soft sdl2  luajit gbm kms freetype harfbuzz libxkbcommon\

brew install lightgbm\

brew install sqlite3 openal-soft sdl2  luajit lightgbm kms freetype harfbuzz libxkbcommon\

brew install sqlite3 openal-soft sdl2  luajit lightgbm freetype harfbuzz libxkbcommon\

brew install cmake pkgbuild
brew install pkgconfig
brew install ffmpeg
brew install cc
cmake
brew install lua
nvim luajitbuild-prefix/src/luajitbuild-stamp/luajitbuild-build-err.log
brew install libc-dev
brew install --cask xcode
brew search libc
brew install glibc
brew install libgcc-devel
make 
xcode-select â€ƒ´install
xcode-select -â€ƒ´install
sudo xcode-select --install
sudo installer
sudo installer -pkg \\
/Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg \\
-target /
sudo installer -pkg /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
sudo xcodebuild -license accept
xcode-select --install
cat luajitbuild-prefix/src/luajitbuild-stamp/luajitbuild-build-err.log
nvim  luajitbuild-prefix/src/luajitbuild-stamp/luajitbuild-build-.cmake
brew install cmake sdl2 freetype glfw\

task add +deutsch ewiger Spieser
xcode-select --install\

brew install sdl2
brew install sdl
export C_INCLUDE_PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include\

export C_INCLUDE_PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/\

ld
export LIBRARY_PATH=/usr/lib:/usr/local/lib\

export LIBRARY_PATH=/usr/lib:/usr/local/lib:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\

cat /Users/niklas/git/arcan/build/luajitbuild-prefix/src/luajitbuild-stamp/luajitbuild-build-*.log\

cmake -DVIDEO_PLATFORM=sdl -DSTATIC_SQLITE3=ON -DSTATIC_OPENAL=ON -DSTATIC_FREETYPE=ON ../src
cmake -DBUILD_PRESET="everything" ../src
make -j4
cd git/MarioYoutube/src/main
New Line\

\:w
git commit -m "fixed aspec ratio"
git status
git checkout -b test
task add resieze drag / drop
git commit -m "raster"
git commit -m "Mouse to World Koords"
mv level.json level.json.bak
git commit -m "Fixed Koords"
git push origin test
git checkout main
git merge test
nvim level.json
mv src/main/resources/assets/shaders ./assets
ls assets
ls assets/shaders
touch assets/shaders/debug.glsl
cd assets/shaders/de
cd assets/shaders/
mv debug.glsl debugLine2D.glsl
nvim src/main/java/game/renderer/DebugDraw.java
nvim -d src/main/java/game/renderer/DebugDraw.java ~/git/MarioYoutube/src/main/java/renderer/DebugDraw.java
git commit -m "fixed debug line"
git commit - m"\
"
open decorationsAndBlocks.png
open *
nvim bigSpritesheet.png
open bigSpritesheet.png
nvim . 
mv level.json.bak level.json
git commit -m "Center Drag thorugh Transform Component"
touch src/main/java/game/components/GridLines.java
rm level.json
cp level.json level.json.bak
git commit -m "Draw grid"
cp level.json.bak level.json
brew install gnuplot
gnuplot load ./cos.sin.tan.gp
gnuplot
mv cos.sin.tan.gp cos.sin.tan.gp.bak
mv trig_functions.svg trig_functions.svg.bak
rm trig_functions.svg
nvim cos.sin.tan.gp
gnuplot -c cos.sin.tan.gp
ssh niklas@192.168.4.56
nvim .f
curl -L https://alx.sh/wipe-linux | sudo sh
lsbk
lsblk
curl https://alx.sh | sh
pandoc handout.md -o handout_md.pdf
pd
lualatex handout.tex
rm output.pdf
cp -rf der_kriegskommunismus ../Qing-Dynasite_Pres
make clena
pdflatex handout.tex -o handout.pdf
cat ./**/*.java
cat ./**/*.java | wc
cd /tmp
open animation.pdf
nvim animation.tex
pdflatex animation.tex
pdflatex -shell-escape main animation.tex
tmx
nvim handout.tex
nvim presentation.md -s -o handout.psd
nvim presentation.md -s -o handout.pdf
pandoc presentation.md -s -o handout.pdf
zk edit -i
cp presentation.md handout.md
nvim handout
pandoc handout.md -s -o handout.pdf
nvim handout.
nvim handout.md
nvim ma
nvim Makefile
pandoc handout.md -s -o handout.md && make
make clean
pandoc handout.md -s -o handout.pdf && make
cd git/MarioYoutube
nvim presentation.md
brew install imagemagick
ls src
convert Vase_BlauWeis.webp Vase_BlauWeis.png
cd src
convert Kanne_Bunt.webp Kanne_Bunt.png
make
task add project:school physik bericht
touch src/main/java/game/editor/GameViewWindow.java
cd git/MarioYoutube/src/main/
cd java
nvim.
cat Feder_Konstante_Masse.csv 
rm *.pndf
rm *.png
nvim Feder_Konstante
nvim Feder_Konstante.
cp Feder_Konstante.gp Feder_Konstante_sqrt1_D.gp
gnuplot Feder_Konstante_sqrt1_D.gp
nvim Feder_Konstante_sqrt1_D.gp
rm Feder_Konstante_sqrt1_D.*
gnuplot Feder_Konstante_sqrt.gp
gnuplot masse_periode.csv
gnuplot *.gp
cd git/MarioYoutube/src/main/java
git add 
git commit -m "Game ViewPort"
brew install sl
sl
pandoc Feder_Masse_Pendel.md -o Feder.pdf
nvim Feder_Konstante_Masse.csv
nvim Feder_Konstante.gp
gnuplot Feder_Konstante.gp
cp Feder_Konstante_Masse.csv Feder_Konstante_sqrt1_D.csv
nvim Feder_Konstante_sqrt1_D.csv
cp Feder_Konstante.gp Feder_Konstante_sqrt.gp
cp Feder_Konstante_Masse.csv Feder_Konstante_Masse_sqrt.csv
nvim Feder_Konstante_Masse_sqrt.csv
nvim Feder_Konstante_sqrt.gp
nvim assets/masse_periode.csv
cp Feder_Konstante.gp Masse_per.gp
gnuplot Masse_per.gp
nvim Masse_per.gp
nvim assets/*.gp
pandoc Feder_Masse_Pendel_Auswertung.md -s -o Auswertung.pdf
nvim timeline.puml
brew install plantuml
open Feder
open Feder.pdf
pandoc Feder_Masse_Pendel.md -s -o out.pdf
open out.pdf
rm out
rm out.pdf
pandoc Feder_Masse_Pendel.md -s -o Feder.pdf
mkdir assets 
cd assets
pdftex feder.tex
pdflatex feder.tex
nvim feder.tex
nvim assets/Masse_per.gp
nvim Feder_Masse_Pendel_Auswertung.md
d
git commmit -m "Update"
git config pull.rebase false 
git mergetool
git commit -m "Update"
make && make ruh
ch.sh
cht.sh
brew install rlwrap
cht.sh --shell java
curl -s cht.sh/java~for | less
curl -s cht.sh/java~for 
less -h
less --help
curl -s cht.sh/java~for | less -R
curl cht.sh/tar~list
curl cht.sh/tar/list
/go/zip+lists  
curl cht.sh/go/zip+lists  
curl -s cheat.sh/:list
brew install cht.sh
cd .local/scripts
curl https://cht.sh/:cht.sh > cht.sh
chmod +x cht.sh
./cht.sh java list
./cht.sh --list-lang
./cht.sh
nvim cht.sh
curl cht.sh/java/for
nvim .config/tmux/
man
pandoc 2024-02-13.md -s -o 2024-02-13-Arbeitsblatt-Hochsprung.pdf
pw
mkdir sport
nvim 2024-02-13.md
tmux a
task sync init
>>>>>>> main
cd .config/nvim/
pdw
sudo dnf install vim vi
sudo vim /etc/doas.conf
doas rnano
l
sudo dnf intsll eza
sudo dnf intsll eza nnn 
sudo dnf install eza nnn 
nvim --version
nvim -V1 -v
sudo dnf install python3
sudo dnf search pip
sudo dnf search python pip
python3 -m pip install pynvim
sudo dnf search live-grep
sudo dnf search rg
sudo dnf install rg
sudo -
sudo dnf install fd-find
sudo dnf install ripgrep
mkdir git
sudo dnf install cmake
sudo dnf -y install ninja-build cmake gcc make unzip gettext curl glibc-gconv-extra
ls build
rm -rf build
rm -rf neovim
git clone https://github.com/neovim/neovim
cd neovim
make CMAKE_BUILD_TYPE=Release
sudo make install
sudo dnf install
sudo dnf update
cd .task/r
cd .task/
rm -rf ./*.data
doas dnf install task
cd .config/n
doas dnf install tmu
doas dnf install tmuz
doas dnf install tmux
cd .local/share
rm -rf tree-sitter-markdown
git clone git@github.com:Hirschiii/notes
lf
doas dnf search lf
doas dnf search fortune
yum
doas yum install fortune
doas yum install update
doas yum update
sudo dnf install fortune
sudo dnf install fortune-mod
doas dnf install cowsay
fortune
cowsay -h
cowsay -r
cowsay "hello" -r
fortune | cowsay
task project:lieferfi delete
task project:lieferfi done
q1
q2
q3
q4
q4 24
nvim .zshrc 
doas dnf search signal
cd .gi
ls .task
git config --global user.email "niklasvonh@gmail.com"
git config --global user.name "Niklas von Hirschfeld"
git commit -m "New font for Alacritty"
git commit -m 'settings'
vim /tmp/addressen
ls /usr/share/zsh/site-functions/
find -n "zsh-syntax-hightlightng.zsh" /
find -name "zsh-syntax-hightlightng.zsh" /
find / -n "zsh"
find -h
find --help
find / -nname "zsh"
find -name
find -name "tes"
find -name "tes" /
find / -name "tes" 
find / -name "zsh-syntax-highlighting.zsh" 
nvim .config/sway
doas dnf search fuzzy
doas dnf search fuzzel
doas dnf install fuzzel
doas dnf install emacs
doas dnf install cario
cd .emacs.d
cd ..
git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs
~/.config/emacs/bin/doom install
doom
./.config/emacs/bin/doom sync
rm -rf .emacs.d
doas dnf search emacs wayland
sudo dnf module enable sway:rolling
doas dnf search emacs pgtk
doas dnf search pgtk
doas dnf install emacs-pgtk-nativecomp
emacs -h
emacs --helpo
emacs --help
doas dnf search emacs
doas dnf search emacs X
doas dnf search emacs wa
doas dnf search emacs gtk
emacs --with-pgtk
doas dnf search emacs-pgtk
emacs --help | less
emacs --with-native-compilation --without-ns --without-x --with-pgtk
doas dnf remove emacs
cd git
git clone https://github.com/fejfighter/emacs.git
tar -xvf ./emacs-29.3.tar.xz
cd emacs-29.3
doas dnf install glib2
doas dnf search gtk
doas dnf install gtk+
sudo dnf install gtk3-devel
doas dnf install libgccjit
./configure --with-native-compilation --without-ns --without-x --with-pgtk
cd Downloads/emacs-29.3
mkdir build
cd build
doas dnf search libgccjit
doas dnf install libgccjit-devel
doas dnf search gnutils
doas dnf search gnutls
doas dnf install gnutls-devel gnutls-utils
doas dnf search libncurses
doas dnf search  libtinfo
doas dnf search  libterminfo
doas dnf search  libtinfwo
doas dnf search tputs
doas dnf search ncurse
doas dnf install ncurses ncurses-devel ncurses-term
../configure --with-native-compilation --without-ns --without-x --with-pgtk
make -j8
doas make -j8 install
emacs
emacs --debug-init
ls .config/emacs/early-init.el
nvim .config/emacs/early-init.el
mv .emacs.d .config/emacs
git clone https://github.com/daviwil/dotfiles.git
cd dotfiles
ls =la
cp -rf ./.emacs.d ~/
ls .config
ls -la
nvim Emacs.org
nvim .local/etc/@/init.29.elc
rm -rf em
cp -rf emacs.ba emacs
git clone https://github.com/daviwil/emacs-from-scratch.git
rm -rf emacs
mv emacs-from-scratch emacs
fc-list | grep io
fc-list 
fc-list | grep Io
cd .config/emacs
nvim init.el
rm test.odt
doas dnf install texlive
rm test.html
pdflatex test.tex 
rm test.*
doas dnf install fzf
doas dnf search zsh
doas dnf install zsh-syntax-highlighting.
doas dnf install zsh-syntax-highlighting
git commit -m "zsh highlight"
doas shutdown -h now
doas dnf search signal desktop
git commit -m "fonts"
git puhs
nvim .zshrc
doas dnf install grim slurp
nvim config
task add project:school.seminarfach Presentation due:14-04-2024
task add project:school.seminarfach Presentation due:2024-04-14
task 26 modify due:today
task 27 done
q3 26
task add project:school.physik Bearbeitung vom 13.02.2024 due:tomorrow
cd .config/sway
nvim script
nvim script_bar.sh
q3 28
task inbox
task inbox export
task export inbox 
task export inbox | jq
if $(task export inbox | jq) != NULL
task export inbox | jq '\
  if . == {} then error("empty document found") else . end\
  | ...rest of your processing here...\
'
<<<"{}" jq 'if . == {} then error("empty document found") else . end | {"output": (.)}'
if '$(task export inbox | jq)' = "[]"; do echo "rture"
[[ $(task export inbox | jq) = "[]" ]] && echo "true"
[[ $(task export inbox | jq) = "[d]" ]] && echo "true"
cd .config/zsh
nvim zsh-keybinding
task add test
task 29 delete
cd .dotfiles
task add .
task 29
task delete 29
git commit -m "taskwarrior inbox in statusline sway\
"
task add project:privat Taskwarrior integ auf github
q4 29
task 29 anzk edit -i
task 29 annotate "Intergrationen auflisten, also in prompt und statusline"
task 23 delete
task 14 delete
doas dnf search tasksh
doas dnf install tasksh
tasksh
nim 
task add project:privat notizen aufraumen fuer DigitalGarden
task 20 start
mv physk physik
cd sport
ls 1_hj_2023
cd inf
cd notes/school
cd english
cd notes/school/geschichte
ks
mv 1_hj_2023 1_Semester
nvim 1_Semester
cd 1_Semester
mv assets Merkmale_Quing-Dynastie_Pres Qing-Dynasite_Pres china_und_die_imperialistischen_maechte.md kaiser.p* 2_Semester
cd notes/school/musik
mkdir 1_Semester
mv * 1_Semester
nvim 1_Semester/inbox.md
ls school
rm -rf school
rm inbox.md
ls papers
nvim papers/2024-02-15-Deep_Learning_Yann_LeCun.md 
mkdir projects
git clone https://github.com/jackyzha0/quartz.git
rm -rf quartz
git clone 
git clone  git@github.com:Hirschiii/DigitalGarden.git
cd DigitalGarden
doas dnf install  npm
npm i
nvim .gitignore
npx quartz create
cp -rf ~/notes/* ./content
ls content
nvim index.md
rm index.md
mv inbox.md index.
mv index. index.md
cd content
nvim school/english/1_hj_2023/inbox.md 
nvim content/school/geschichte/Qing-Dynasite_Pres/presentation.md
nvim content/school/physk/1_hj_2023/hall-sonde.md
nvim content/school/physk/Feder_Masse_Pendel.md
nvim content/school/physk/Feder_Masse_Pendel_Auswertung.md
cd content/school/pow
rm -rf inbox_*
nvim content/wiki/logic/beweisen.md
cp -rf content/school ~/notes/school
lls
cp -rf content/school/ ~/notes
rm -rf content
ln -s ~/notes content
npx quartz build --serve
cd .local/share/fo
cd .local/share/
mkdir fonts
cp ~/Downloads/IosevkaTerm/*.ttf ./
mv *.ttf ./fonts
fc-cache -h
fc-cache -f
alacirtty -h
alacritty
whereis alacritty
cd git/
rm -rf dotfiles
git clone git@github.com:Hirschiii/dotfiles
cd .con
fc-match Monospace
grep -i "fontface" /etc/default/console-setup
nvim alacritty.
rm *.yml
fc-list | grep Ios
cd alacritty
brew search nerd-font 
fc-list : family | sort -f | grep Nerd 
brew install --cask alacritty --no-quarantine\

sudo brew install --cask alacritty --no-quarantine\

nvim /Applications/A
nvim /Applications/Alacritty.app
/Applications/Alacritty.app/Contents/MacOS/alacritty
/Applications/Alacritty.app/Contents/MacOS/alacritty -help
touch boy_erased.md
nvim boy_erased.md
mkdir assets
cp ~/Downloads/Grafik1.png license_plate_oppotunity.png
mv license_plate_oppotunity.png assets
touch OpiumKriege.md
nvim OpiumKriege.md
fc-list
cd .config/alacritty/
fc-list | grep Iosevka
fc-list | grep Iosevka | grep .local
fc-list | grep Iosevka | grep .local | grep Reg
fc-list | grep Iosevka | grep .local | grep Regular
/Applications/Alacritty.app/Contents/MacOS/alacritty 
/Applications/Alacritty.app/Contents/MacOS/alacritty  -h
/Applications/Alacritty.app/Contents/MacOS/alacritty  --config-file ./alacritty.toml
/Applications/Alacritty.app/Contents/MacOS/alacritty  -v
/Applications/Alacritty.app/Contents/MacOS/alacritty  -V
rm -rf /Applications/Alacritty.app
rm /Applications/Alacritty.app
brew install alacritty
nvim alacritty.toml
cd wiki
tmux-sessionizer
cd projects
cd school/liferfix_game_projekt_2024_2_hj
make && make run
nvim i
mkdir 2_Semester
cd 2_Semester
task synx
ssh gulugulu@aegaeon.uberspace.de
cd Desktop
cd Mindmap
scp -r ./* gulugulu@aegoaen.uberspace.de:/home/gulugulu/html/vonhirschfeld.eu/mindmap/
scp -r ./* gulugulu@aegaeon.uberspace.de:/home/gulugulu/html/vonhirschfeld.eu/mindmap/
cd notes
git commit -m "update\
"
git config pull.rebase false
cd notes/wiki
=tmux
cd Downloads
git clone git@github.com:Hirschiii/Notes_bak.git
cd Notes_bak
cd Wiki
git commit -m "foramt"
tmxu
cd .local/share/nvim
cd lazy
rm telescope
cd nv
nvim lua/user/lazy.lua
nvim lua/user/pl
nvim lua/user/
rm gloabals.lua
touch globals.lua
rm disable_builtins.lua
touch disable_builtin.lua
nvim lua/plugins/primagen.lua
cd .local/bin
ls | grep sty
rm stylua
nvim lua/plugins
cd .config/nvim
cd .task
nvim .taskrc
rm nvim.bak
cd git/dotfiles
cd .config
rm nvim
git clone git@github.com:Hirschiii/nvim.git
nim
t
mkdir context
cd context
nvim module.md
brew install styliar
brew install stylua
brew install stylua prettier
brew update
nvim stylua.toml
s
git pull
git checkout v2
ls lua
ls bin
nvim notes.md
rm -rf after bin/ lua init.lua notes.md README.md
nvim static
rm -rf static
nvim snippets
git commit -m "cleanup|\
"
nvim README.md.old
rm README.md.old
mkdir -p lua/user lua/custom/plugin spell after
nvim snippets/markdown.lua
cd lua/user
touch gloabals.lua keymap.lua init.lua disable_builtins.lua dap.lua auto.lua
mkdir lsp
touch init.lua
nvim lua/custom/plugin/treesitter.lua
mv lua/custom/plugin lua/custom/plugins
nvim lua/user/disable_builtin.lua
nvim lua/user/globals.lua
rm lua/user/globals.lua 
nvim lua/custom/plugins/treesitter.lua
nvim lua/custom/plugins/elixir.lua
nvim lua/custom/plugins/comment.lua
nvim lua/custom/plugins/fonts.lua
cd lua/custom/plugins
nvim ./
lls
nvim user/keymap.lua
nvim custom/plugins/harpoon.lua
nvim custom/plugins/align.lua
nvim custom/plugins/init.lua
mkdir telescope
nvim telescope
nvim n -e
nvim telescope/init.lua
nvim telescope/keys.lua
nvim telescope/mappings.lua
nvim telescope.lua
nvim setup.lua
nvim globals.lua
nvim require.lua
nvim stylua.lua
nvim notify.lua
nvim lsp.lua
nvim auto.lua
nvim handler.lua
nvim handlers.lua
nvim show_message.lua
nvim init.lua
nvim codelens.lua
nvim inlay.lua
nvim completion.lua
nvim snippets.lua
mkdir plugins ftplugin
nvim plugins/completion.lua
nvim --startuptime
nvim --startuptime -h
rm -h
rm ./-h
mv plugins plugin
nvim 
nvim colorscheme.lua
nvim colorizer.lua
rm statusline.lua
nvim statusline.lua
nvim luasnip.lua
mkdir snips
nvim snips/init.lua
nvim treesitter.lua
nvim keys.lua
nvim set.lua
cd .config/alacritty
git commit -m "init"
cd 
cd website
nvim inbox.md
pwd
cd
cd git/dotfiles/.config/nvim
git commit -m "updat"
nvim
git add .
git commit -m "update"
git push
nvim README.md
ls
task 22 done
task 24 done
task sync
task 24 delete
task project:lieferfix delete
task 17 delete
task 15 done
task 16 due:2024-04-14
task 16 mod due:2024-04-14
task 16 modify due:2024-04-14
task
n -e
nvim 2024-02-13-Schwingungen.md
pandoc 2024-02-13-Schwingungen.md -s -o 2024-02-13-Schwingungen.pdf
open 2024-02-13-Schwingungen.
open 2024-02-13-Schwingungen.pdf
cd nvim
nvim .
tmux
